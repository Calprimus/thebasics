/* >>>> 10/17 */


/* p {
    font-family: Arial;
}

h1 {
    color: maroon;
}

.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

#article-title {
    font-family: cursive;
    text-transform: capitalize;
} */


/* >>>> 11/17 */


/* p {
    font-family: Arial;
}

h1 {
    color: maroon;
}

.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

.publish-time {
    color: gray;
}

.cursive {
    font-family: cursive;
}

.capitalize {
    text-transform: capitalize;
} */


/* >>>> 12/17 */


/* p {
    font-family: Arial;
}

h1 {
    color: maroon;
}

h2.destination {
    font-family: cursive;
}

.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

.publish-time {
    color: gray;
}

.cursive {
    font-family: cursive;
}

.capitalize {
    text-transform: capitalize;
} */


/* >>>> 13/17 */


/* p {
    font-family: Arial;
}

h1 {
    color: maroon;
}

h2.destination {
    font-family: cursive;
}

.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

.publish-time {
    color: gray;
}

.cursive {
    font-family: cursive;
}

.capitalize {
    text-transform: capitalize;
}

.description h5 {
    color: teal;
} */


/* >>>> 14/17 */


/* p {
    font-family: Arial;
}

h1 {
    color: maroon;
}

h5 {
    color: rebeccapurple;
}

h2.destination {
    font-family: cursive;
}

.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

.publish-time {
    color: gray;
}

.cursive {
    font-family: cursive;
}

.capitalize {
    text-transform: capitalize;
} */


/* >>>> 15/17 */


/* p {
    font-family: Arial;
}

h1 {
    color: maroon;
}

h5 {
    color: rebeccapurple !important;
}

h2.destination {
    font-family: cursive;
}

.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

.publish-time {
    color: gray;
}

.cursive {
    font-family: cursive;
}

.capitalize {
    text-transform: capitalize;
}

.description h5 {
    color: teal;
} */


/* >>>> 16/17 */


/* p {
    font-family: Arial;
}

h1 {
    color: maroon;
}

h5 {
    color: rebeccapurple !important;
}

h5,
p {
    font-family: Georgia;
}

h2.destination {
    font-family: cursive;
}

.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

.publish-time {
    color: gray;
}

.cursive {
    font-family: cursive;
}

.capitalize {
    text-transform: capitalize;
}

.description h5 {
    color: teal;
} */


/*  >>>> 17/17 */


/* CSS SETUP AND SELECTORS
Review CSS Selectors

Throughout this lesson, you learned how to select HTML elements with CSS and apply styles to them. Let's review what you learned:

1 - CSS can change the look of HTML elements. 
    In order to do this, CSS must select HTML elements, then apply styles to them.

2 - CSS can select HTML elements by tag, class, or ID.

3 - Multiple CSS classes can be applied to one HTML element.

4 - Classes can be reusable, while IDs can only be used once.

5 - IDs are more specific than classes, and classes are more specific than tags. 
    That means IDs will override any styles from a class, and classes will override any styles from a tag selector.

6 - Multiple selectors can be chained together to select an element. 
    This raises the specificity, but can be necessary.

7 - Nested elements can be selected by separating selectors with a space.

8 - The !important flag will override any style, 
    however it should almost never be used, as it is extremely difficult to override.

9 - Multiple unrelated selectors can receive the same styles by separating the selector names with commas. */